#This tells Docker how to run our Docker container.

# most recent version of Compose which is “3”
version: "3.8"

services:
  db:
    image: postgres:latest
    ports:
      - "5433:5433"
    command: -p 5433
    container_name: bynde_db

    # These must be matching with env var DATABASE_URL in Dockerfile
    environment:
      - POSTGRES_DB=bynde
      - POSTGRES_USER=bynde
      - POSTGRES_PASSWORD=123
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U bynde -p 5433 -d bynde" ]
      interval: 5s
      timeout: 5s
      retries: 3

  redis:
    image: "redis:alpine"
    container_name: bynde_redis

  web:
    command: serve
    build: .
    image: bundleup
    # stdin_open: true
    # tty: true
    container_name: bynde_web
    volumes:
      - "./src:/app/src"
    ports:
      - "$APP_PORT:$APP_PORT"
      - 5678:5678
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: curl --fail http://localhost:$APP_PORT/health-check || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
    env_file:
      - .env

  celery:
    build: .
    image: bundleup
    container_name: bynde_celery
    command: celery
    volumes:
      - "./src:/app/src"
    depends_on:
      web:
        condition: service_healthy
    env_file:
      - .env

  celery-beat:
    build: .
    image: bundleup
    container_name: bynde_celery_beat
    command: celery-beat
    volumes:
      - "./src:/app/src"
    depends_on:
      celery:
        condition: service_started
    env_file:
      - .env
      
  # TODO: removed to save memory.. add later
  # celery-flower:
  #   build: .
  #   image: bundleup
  #   container_name: bynde_celery_flower
  #   command: celery-flower
  #   volumes:
  #     - "./src:/app/src"
  #   ports:
  #     - "5050:5050"
  #   depends_on:
  #     - celery
  #     - celery-beat
