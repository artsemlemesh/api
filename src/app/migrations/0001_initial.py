# Generated by Django 2.1.5 on 2020-05-14 06:50

import app.models
import django_currentuser.db.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import phonenumber_field.modelfields
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                 help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(
                    max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(
                    max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False,
                 help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=False,
                 help_text='Designates whether this user should be treated as active. ', verbose_name='active')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(
                    blank=True, max_length=128, null=True)),
                ('photo', models.ImageField(blank=True, help_text='avatar photo',
                 null=True, upload_to=app.models.get_upload_path)),
                ('expo_push_token', models.CharField(
                    blank=True, max_length=200, null=True)),
                ('is_google_calendar_synced', models.BooleanField(default=False)),
                ('is_stripe_connected', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                 related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                 related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', app.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GoogleSettings',
            fields=[
                ('id', models.AutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=200)),
                ('token_expiry', models.DateTimeField()),
                ('refresh_token', models.CharField(max_length=200)),
                ('sync_token', models.CharField(max_length=200)),
                ('push_notification_id', models.UUIDField(default=uuid.uuid4)),
                ('calendar_resource_id', models.CharField(
                    blank=True, max_length=200, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE,
                 related_name='google_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Google Settings',
            },
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.AutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(
                    default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(
                    default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('status', model_utils.fields.StatusField(choices=[('draft', 'draft'), ('published', 'published'), ('sold', 'sold'), (
                    'shipped', 'shipped'), ('received', 'received')], default='draft', max_length=100, no_check_for_status=True)),
                ('status_changed', model_utils.fields.MonitorField(
                    default=django.utils.timezone.now, monitor='status')),
                ('description', models.TextField(
                    blank=True, max_length=500, null=True)),
                ('seller_price', models.DecimalField(
                    blank=True, decimal_places=2, max_digits=8, null=True)),
                ('shipping_cost', models.DecimalField(
                    blank=True, decimal_places=2, max_digits=8, null=True)),
                ('platform_fee_pct', models.DecimalField(blank=True,
                 decimal_places=4, default=1.01, max_digits=5, null=True)),
                ('platform_premium', models.DecimalField(blank=True,
                 decimal_places=2, default=0, max_digits=8, null=True)),
                ('buyer_price', models.DecimalField(blank=True,
                 decimal_places=2, max_digits=8, null=True)),
                ('hidden', models.BooleanField(default=False)),
                ('created_by', django_currentuser.db.models.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT,
                 related_name='created_app_listing_set', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('modified_by', django_currentuser.db.models.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT,
                 related_name='modified_app_listing_set', to=settings.AUTH_USER_MODEL, verbose_name='modified by')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.',
                 through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(
                    default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(
                    default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('front_image', models.TextField(
                    blank=True, max_length=255, null=True)),
                ('back_image', models.TextField(
                    blank=True, max_length=255, null=True)),
                ('gender', models.CharField(choices=[
                 ('girl', 'Girl'), ('boy', 'Boy'), ('neutral', 'Neutral')], default='draft', max_length=9)),
                ('quality', models.CharField(choices=[('nwt', 'New With Tag'), ('nwot', 'New Without Tag'), (
                    'excellent', 'Excellent Used'), ('good', 'Good Used'), ('play', 'Play')], default='draft', max_length=9)),
                ('brand', models.TextField(blank=True, max_length=100, null=True)),
                ('category', models.TextField(blank=True, max_length=100, null=True)),
                ('size', models.TextField(blank=True, max_length=100, null=True)),
                ('listing', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.Listing')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialProfile',
            fields=[
                ('id', models.AutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_id', models.CharField(max_length=50)),
                ('provider_name', models.CharField(choices=[
                 ('facebook', 'Facebook'), ('google', 'Google')], max_length=8)),
                ('access_token', models.CharField(max_length=350)),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='socialprofile',
            unique_together={('user', 'provider_name')},
        ),
    ]
